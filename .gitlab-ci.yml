include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/container_scan.yml

stages:
  - download
  - build
  - scan

download:
  variables:
    URI: https://doi-janky.infosiftr.net/job/tianon/job/debuerreotype/job/amd64/lastSuccessfulBuild/artifact/
    GIT_STRATEGY: none
  stage: download
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  before_script:
    - apk add --no-cache coreutils curl grep
  script:
    - PATHS="oldstable oldstable/slim stable stable/slim"
    - mkdir -p artifacts/stable/slim
    - mkdir -p artifacts/oldstable/slim
    - VERSIONS="stable oldstable"
    - |
      for v in $VERSIONS; do
        curl -lsS ${URI}/${v}/rootfs.debian_version > artifacts/${v}/version.txt
        curl -lsS ${URI}/${v}/Release | grep -oP "(?<=Codename:\ )(.*)" | awk '{print $1}' >> artifacts/${v}/version.txt
        cp artifacts/${v}/version.txt artifacts/${v}/slim/version.txt
      done;
    - |
      for p in $PATHS; do
        curl -OlsS ${URI}/${p}/rootfs.tar.xz
        curl -OlsS ${URI}/${p}/rootfs.tar.xz.sha256
        echo "$(cat rootfs.tar.xz.sha256) rootfs.tar.xz" | sha256sum -c -
        mv rootfs.tar.xz artifacts/${p}/
      done;
  artifacts:
    expire_in: 2 days
    paths:
      - artifacts/

.build:
  dependencies:
    - download
  image: registry.gitlab.com/jitesoft/dockerfiles/docker:latest
  stage: build
  variables:
    DIR_PATH: /
    TAG_SUFFIX: ""
  script:
    - mv artifacts/${DIR_PATH}/rootfs.tar.xz rootfs.tar.xz
    - VERSIONS=$(cat artifacts/${DIR_PATH}/version.txt)
    - VERSION=$(echo ${VERSIONS} | awk '{print $1;}')
    - MAJOR_VERSION=$(echo ${VERSION} | cut -d'.' -f1)
    - NAME=$(echo ${VERSIONS} | awk '{print $2;}')
    - docker build --label "com.jitesoft.app.debian.version=${VERSION}" --label "com.jitesoft.app.debian.version.name=${NAME}" -t ${CI_REGISTRY_IMAGE}:${VERSION}${TAG_SUFFIX} .
    - TAGS="${TAGS} ${NAME}${TAG_SUFFIX} ${VERSION}${TAG_SUFFIX} ${MAJOR_VERSION}${TAG_SUFFIX}"
    - |
      for tag in ${TAGS}; do
        docker tag ${CI_REGISTRY_IMAGE}:${VERSION}${TAG_SUFFIX} ${CI_REGISTRY_IMAGE}:${tag}
        docker tag ${CI_REGISTRY_IMAGE}:${VERSION}${TAG_SUFFIX} jitesoft/debian:${tag}
        docker tag ${CI_REGISTRY_IMAGE}:${VERSION}${TAG_SUFFIX} quay.io/jitesoft/debian:${tag}
        docker push ${CI_REGISTRY_IMAGE}:${tag}
        docker push jitesoft/debian:${tag}
        docker push quay.io/jitesoft/debian:${tag}
      done;

build:old:
  extends: .build
  variables:
    DIR_PATH: 'oldstable'
    TAGS: ""
    TAG_SUFFIX: ""

build:stable:
  extends: .build
  variables:
    DIR_PATH: 'stable'
    TAGS: "latest stable"
    TAG_SUFFIX: ""

build:old:slim:
  extends: .build
  variables:
    DIR_PATH: 'oldstable/slim'
    TAGS: ""
    TAG_SUFFIX: "-slim"

build:stable:slim:
  extends: .build
  variables:
    DIR_PATH: 'stable/slim'
    TAGS: "latest-slim stable-slim"
    TAG_SUFFIX: "-slim"

scan:stable:
  needs:
    - build:stable
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:stable"
    GIT_STRATEGY: none

scan:old:
  needs:
    - build:old
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:stretch"
    GIT_STRATEGY: none

scan:stable:slim:
  needs:
    - build:stable:slim
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:stable-slim"
    GIT_STRATEGY: none

scan:old:slim:
  needs:
    - build:old:slim
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:stretch-slim"
    GIT_STRATEGY: none
